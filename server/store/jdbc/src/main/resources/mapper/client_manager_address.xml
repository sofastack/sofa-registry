<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.alipay.sofa.registry.jdbc.mapper.ClientManagerAddressMapper">

    <resultMap type="com.alipay.sofa.registry.jdbc.domain.ClientManagerAddressDomain" id="clientManagerAddressResultMap">
        <id property="id" column="id" javaType="long" jdbcType="BIGINT"/>
        <result property="dataCenter" column="data_center" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="address" column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="operation" column="operation" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="gmtModify" column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="gmtCreateUnixNanos" column="gmt_create_unixnanos" javaType="long" jdbcType="BIGINT"/>
        <result property="pub" column="pub" javaType="boolean" jdbcType="TINYINT"/>
        <result property="sub" column="sub" javaType="boolean" jdbcType="TINYINT"/>
    </resultMap>

    <update id="update" parameterType="com.alipay.sofa.registry.jdbc.domain.ClientManagerAddressDomain">
        <![CDATA[

              update /*+ QUERY_TIMEOUT(3000000) */ client_manager_address set gmt_modified = CURRENT_TIMESTAMP
              WHERE data_center = #{dataCenter} AND address = #{address} AND operation = #{operation} AND sub = #{sub}

        ]]>
    </update>

    <insert id="insertOnReplace" parameterType="com.alipay.sofa.registry.jdbc.domain.ClientManagerAddressDomain">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
            <![CDATA[
            replace /*+ QUERY_TIMEOUT(3000000) */ into client_manager_address(data_center, address, operation, gmt_create, gmt_modified, pub, sub)
            values (#{dataCenter},#{address},#{operation},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{pub},#{sub})
        ]]>
    </insert>

    <select id="queryAfterThanByLimit" resultMap="clientManagerAddressResultMap">
        select /*+ QUERY_TIMEOUT(3000000),read_consistency(weak) */ *, UNIX_TIMESTAMP(gmt_create)*1000000000 as gmt_create_unixnanos from client_manager_address where data_center = #{dataCenter} and id > #{maxId}
        order by id limit #{limit}
    </select>

    <select id="getExpireAddress" resultType="java.lang.String">
        <![CDATA[
            select /*+ QUERY_TIMEOUT(3000000),read_consistency(weak) */ address from client_manager_address where data_center=#{dataCenter} and gmt_modified < #{expireDate}
            and operation in ('clientOpen','reduce')
            limit #{limit}
        ]]>
    </select>

    <select id="getClientOffSizeBefore" resultType="java.lang.Integer">
        <![CDATA[
            select /*+ QUERY_TIMEOUT(3000000),read_consistency(weak) */ count(1) from client_manager_address where data_center=#{dataCenter} and gmt_modified < #{expireDate} and operation='clientOff'
        ]]>
    </select>

    <delete id="cleanExpired">
        <if test="expireAddress != null and expireAddress.size() > 0">
            delete /*+ QUERY_TIMEOUT(5000000) */ from client_manager_address where data_center=#{dataCenter} and address in
            <foreach collection="expireAddress" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>

</mapper>
